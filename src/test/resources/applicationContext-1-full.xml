<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="cn.memedai.orientdb.teleporter"/>

    <import resource="applicationContext-sns-common.xml"/>
    <import resource="applicationContext-sns-dataSource.xml"/>
    <import resource="applicationContext-sns-properties.xml"/>

    <bean id="deleteEdgesConsumer" class="cn.memedai.orientdb.teleporter.sns.full.consumer.DeleteEdgeConsumer"
          scope="prototype">
        <property name="edges">
            <array>
                <value>HasIp</value>
                <value>HasDevice</value>
                <value>HasPhone</value>
                <value>HasStore</value>
                <value>HasApply</value>
                <value>HasOrder</value>
                <value>HasPhoneSource</value>
                <value>HasPhoneMark</value>
            </array>
        </property>
        <property name="documentTxFactory" ref="documentTxFactory"/>
    </bean>

    <bean id="memberBlockingQueue" class="java.util.concurrent.ArrayBlockingQueue">
        <constructor-arg index="0" value="#{snsProp.defaultBlockingQueueSize}"/>
    </bean>
    <bean id="memberProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer"
          scope="prototype">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="blockingQueue" ref="memberBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.member}"/>
    </bean>
    <bean id="memberConsumer" class="cn.memedai.orientdb.teleporter.sns.full.consumer.MemberConsumer"
          scope="prototype">
        <property name="documentTxFactory" ref="documentTxFactory"/>
        <property name="blockingQueue" ref="memberBlockingQueue"/>
        <property name="sql"
                  value="#{snsOrientSqlProp.member}"/>
        <property name="sqlParameterNames">
            <array>
                <value>MEMBER_ID</value>
                <value>NAME</value>
                <value>ID_NO</value>
                <value>PROVINCE</value>
                <value>CITY</value>
                <value>MEMBER_ID</value>
            </array>
        </property>
    </bean>

    <bean id="applyProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer"
          scope="prototype">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="blockingQueue" ref="applyBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.apply} limit ?,?"/>
    </bean>


    <bean id="orderProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="blockingQueue" ref="orderBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.order}  limit ?,?"/>
    </bean>


    <bean id="deviceAndIp1BlockingQueue" class="java.util.concurrent.ArrayBlockingQueue">
        <constructor-arg index="0" value="#{snsProp.defaultBlockingQueueSize}"/>
    </bean>
    <bean id="deviceAndIp1Producer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="blockingQueue" ref="deviceAndIp1BlockingQueue"/>
        <property name="sql"
                  value="SELECT APPL_NO,DEVICE_ID,IP,IP_CITY FROM memedai.A_APPL where device_id is not null or ip is not null  limit ?,?"/>
    </bean>
    <bean id="deviceAndIp1Consumer"
          class="cn.memedai.orientdb.teleporter.sns.full.consumer.DeviceAndIp1Consumer"
          scope="prototype">
        <property name="documentTxFactory" ref="documentTxFactory"/>
        <property name="blockingQueue" ref="deviceAndIp1BlockingQueue"/>
    </bean>


    <bean id="device2CaProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="blockingQueue" ref="device2CaBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.device2Ca}  limit ?,?"/>
    </bean>


    <bean id="ip2CaProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer"
          scope="prototype">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="blockingQueue" ref="ip2CaBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.ip2Ca}  limit ?,?"/>
    </bean>


    <bean id="deviceAndIp2CtaProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer"
          scope="prototype">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="blockingQueue" ref="deviceAndIp2CtaBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.deviceAndIp2Cta} limit ?,?"/>
    </bean>


    <bean id="phoneWithPhoneMarkAndPhoneSourceProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
        <property name="blockingQueue" ref="phoneWithPhoneMarkAndPhoneSourceBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.phoneWithPhoneMarkAndPhoneSource} limit ?,?"/>
    </bean>


    <util:map id="teleporterMap" key-type="java.lang.Integer" value-type="java.util.List">
        <!-- key的大小决定着优先执行顺序-->
        <entry key="10">
            <list>
                <ref bean="deleteEdgesConsumer"/>
            </list>
        </entry>

        <entry key="20">
            <list>
                <ref bean="cacheDeviceConsumer"/>
                <ref bean="cacheIpConsumer"/>
            </list>
        </entry>

        <entry key="30">
            <list>
                <ref bean="storeProducer"/>
                <ref bean="storeConsumer"/>

                <ref bean="memberProducer"/>
                <ref bean="memberConsumer"/>
                <ref bean="memberConsumer"/>
                <ref bean="memberConsumer"/>

                <ref bean="applyProducer"/>
                <ref bean="applyConsumer"/>

                <ref bean="orderProducer"/>
                <ref bean="orderConsumer"/>

                <ref bean="updateMemberOverdueToDefaultConsumer"/>

                <ref bean="phoneWithPhoneMarkAndPhoneSourceProducer"/>
                <ref bean="phoneWithPhoneMarkAndPhoneSourceConsumer"/>
                <ref bean="phoneWithPhoneMarkAndPhoneSourceConsumer"/>
            </list>
        </entry>

        <entry key="40">
            <list>
                <ref bean="memberOverdueProducer"/>
                <ref bean="memberOverdueConsumer"/>

                <ref bean="device2CaProducer"/>
                <ref bean="device2CaConsumer"/>

                <ref bean="ip2CaProducer"/>
                <ref bean="ip2CaConsumer"/>

                <ref bean="deviceAndIp1Producer"/>
                <ref bean="deviceAndIp1Consumer"/>

                <ref bean="deviceAndIp2CtaProducer"/>
                <ref bean="deviceAndIp2CtaConsumer"/>
            </list>
        </entry>

        <entry key="50">
            <list>
                <ref bean="hasStoreConsumer"/>
                <ref bean="hasOrderConsumer"/>
                <ref bean="hasIpConsumer"/>
                <ref bean="hasDeviceConsumer"/>
                <ref bean="hasApplyConsumer"/>
                <ref bean="hasPhoneConsumer"/>
            </list>
        </entry>

    </util:map>

</beans>