<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="cn.memedai.orientdb.teleporter"/>

    <import resource="applicationContext-sns-common.xml"/>
    <import resource="applicationContext-sns-full-common.xml"/>

    <bean id="deleteEdgesFullConsumer" class="cn.memedai.orientdb.teleporter.sns.full.consumer.DeleteEdgeFullConsumer"
          scope="prototype">
        <property name="edges">
            <array>
                <value>HasIp</value>
                <value>HasDevice</value>
                <value>HasPhone</value>
                <value>HasStore</value>
                <value>HasApply</value>
                <value>HasOrder</value>
                <!--<value>HasPhoneSource</value>-->
                <!--<value>HasPhoneMark</value>-->
            </array>
        </property>
        <property name="documentTxFactory" ref="documentTxFactory"/>
    </bean>

    <bean id="memberBlockingQueue" class="java.util.concurrent.ArrayBlockingQueue">
        <constructor-arg index="0" value="#{snsProp.defaultBlockingQueueSize}"/>
    </bean>
    <bean id="memberFullProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer"
          scope="prototype">
        <property name="jdbcTemplate" ref="sqlserverJdbcTemplate"/>
        <property name="blockingQueue" ref="memberBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.member}"/>
    </bean>
    <bean id="memberFullConsumer" class="cn.memedai.orientdb.teleporter.sns.full.consumer.MemberFullConsumer"
          scope="prototype">
        <property name="documentTxFactory" ref="documentTxFactory"/>
        <property name="blockingQueue" ref="memberBlockingQueue"/>
        <property name="sql"
                  value="#{snsOrientSqlProp.member}"/>
        <property name="sqlParameterNames">
            <array>
                <value>MEMBER_ID</value>
                <value>NAME</value>
                <value>ID_NO</value>
                <value>PROVINCE</value>
                <value>CITY</value>
                <value>MOBILE_NO</value>
                <value>MEMBER_ID</value>
            </array>
        </property>
    </bean>

    <bean id="applyFullProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer"
          scope="prototype">
        <property name="jdbcTemplate" ref="walletAndSnsJdbcTemplate"/>
        <property name="blockingQueue" ref="applyBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.apply} limit ?,?"/>
    </bean>


    <bean id="orderFullProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer">
        <property name="jdbcTemplate" ref="walletAndSnsJdbcTemplate"/>
        <property name="blockingQueue" ref="orderBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.order}  limit ?,?"/>
    </bean>


    <bean id="deviceAndIp1BlockingQueue" class="java.util.concurrent.ArrayBlockingQueue">
        <constructor-arg index="0" value="#{snsProp.defaultBlockingQueueSize}"/>
    </bean>
    <bean id="deviceAndIp1FullProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer">
        <property name="jdbcTemplate" ref="sqlserverJdbcTemplate"/>
        <property name="blockingQueue" ref="deviceAndIp1BlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.deviceAndIp1}"/>
    </bean>
    <bean id="deviceAndIp1FullConsumer"
          class="cn.memedai.orientdb.teleporter.sns.full.consumer.DeviceAndIp1FullConsumer"
          scope="prototype">
        <property name="documentTxFactory" ref="documentTxFactory"/>
        <property name="blockingQueue" ref="deviceAndIp1BlockingQueue"/>
    </bean>


    <bean id="device2CaFullProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer">
        <property name="jdbcTemplate" ref="caJdbcTemplate"/>
        <property name="blockingQueue" ref="device2CaBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.device2Ca}  limit ?,?"/>
    </bean>


    <bean id="ip2CaFullProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer"
          scope="prototype">
        <property name="jdbcTemplate" ref="caJdbcTemplate"/>
        <property name="blockingQueue" ref="ip2CaBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.ip2Ca}  limit ?,?"/>
    </bean>


    <bean id="device2CtaFullProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer"
          scope="prototype">
        <property name="jdbcTemplate" ref="ctaJdbcTemplate"/>
        <property name="blockingQueue" ref="device2CtaBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.device2Cta} limit ?,?"/>
    </bean>

    <bean id="ip2CtaFullProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer"
          scope="prototype">
        <property name="jdbcTemplate" ref="ctaJdbcTemplate"/>
        <property name="blockingQueue" ref="ip2CtaBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.ip2Cta} limit ?,?"/>
    </bean>


    <bean id="phoneWithPhoneMarkAndPhoneSourceFullProducer" class="cn.memedai.orientdb.teleporter.JdbcDataProducer">
        <property name="jdbcTemplate" ref="caJdbcTemplate"/>
        <property name="blockingQueue" ref="phoneWithPhoneMarkAndPhoneSourceBlockingQueue"/>
        <property name="sql"
                  value="#{snsSqlProp.phoneWithPhoneMarkAndPhoneSource} limit ?,?"/>
    </bean>


    <util:map id="teleporterMap" key-type="java.lang.Integer" value-type="java.util.List">
        <!-- key的大小决定着优先执行顺序-->
        <entry key="10">
            <list>
                <ref bean="deleteEdgesFullConsumer"/>
                <ref bean="idAddressCommonProducer"/>
            </list>
        </entry>

        <entry key="20">
            <list>
                <ref bean="cacheDeviceFullConsumer"/>
                <ref bean="cacheIpFullConsumer"/>
            </list>
        </entry>

        <entry key="30">
            <list>
                <ref bean="storeCommonProducer"/>
                <ref bean="storeCommonConsumer"/>

                <ref bean="memberFullProducer"/>
                <ref bean="memberFullConsumer"/>
                <ref bean="memberFullConsumer"/>
                <ref bean="memberFullConsumer"/>

                <ref bean="applyFullProducer"/>
                <ref bean="applyCommonConsumer"/>

                <ref bean="orderFullProducer"/>
                <ref bean="orderCommonConsumer"/>

                <ref bean="updateMemberOverdueToDefaultCommonConsumer"/>

                <!--<ref bean="phoneWithPhoneMarkAndPhoneSourceFullProducer"/>-->
                <!--<ref bean="phoneWithPhoneMarkAndPhoneSourceCommonConsumer"/>-->
                <!--<ref bean="phoneWithPhoneMarkAndPhoneSourceCommonConsumer"/>-->
            </list>
        </entry>

        <entry key="40">
            <list>
                <ref bean="memberOverdueCommonProducer"/>
                <ref bean="memberOverdueCommonConsumer"/>

                <ref bean="device2CaFullProducer"/>
                <ref bean="device2CaCommonConsumer"/>

                <ref bean="ip2CaFullProducer"/>
                <ref bean="ip2CaCommonConsumer"/>

                <ref bean="deviceAndIp1FullProducer"/>
                <ref bean="deviceAndIp1FullConsumer"/>

                <ref bean="device2CtaFullProducer"/>
                <ref bean="device2CtaCommonConsumer"/>

                <ref bean="ip2CtaFullProducer"/>
                <ref bean="ip2CtaCommonConsumer"/>
            </list>
        </entry>

        <entry key="50">
            <list>
                <ref bean="memberHasApplyFullConsumer"/>
                <ref bean="orderHasDeviceFullConsumer"/>
                <ref bean="applyHasIpFullConsumer"/>

                <ref bean="memberHasDeviceFullConsumer"/>
                <ref bean="orderHasIpFullConsumer"/>
                <ref bean="applyHasStoreFullConsumer"/>

                <ref bean="memberHasIpFullConsumer"/>
                <ref bean="orderHasStoreFullConsumer"/>
                <ref bean="applyHasDeviceFullConsumer"/>

                <ref bean="memberHasOrderFullConsumer"/>
                <ref bean="phoneHasApplyFullConsumer"/>

                <ref bean="applyHasOrderFullConsumer"/>
                <ref bean="hasPhoneFullConsumer"/>

                <ref bean="phoneHasOrderFullConsumer"/>
            </list>
        </entry>

    </util:map>

</beans>